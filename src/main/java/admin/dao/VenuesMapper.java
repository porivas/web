package admin.dao;

import admin.model.Venues;
import admin.model.VenuesExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

public interface VenuesMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table venues
     *
     * @mbggenerated
     */
    int countByExample(VenuesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table venues
     *
     * @mbggenerated
     */
    int deleteByExample(VenuesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table venues
     *
     * @mbggenerated
     */
    @Delete({
        "delete from venues",
        "where venues_id = #{venuesId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer venuesId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table venues
     *
     * @mbggenerated
     */
    @Insert({
        "insert into venues (venues_id, venues_name, ",
        "venuesType_id, address, ",
        "comments, start, ",
        "location)",
        "values (#{venuesId,jdbcType=INTEGER}, #{venuesName,jdbcType=VARCHAR}, ",
        "#{venuestypeId,jdbcType=INTEGER}, #{address,jdbcType=INTEGER}, ",
        "#{comments,jdbcType=VARCHAR}, #{start,jdbcType=VARCHAR}, ",
        "#{location,jdbcType=INTEGER})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="venuesId", before=true, resultType=Integer.class)
    int insert(Venues record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table venues
     *
     * @mbggenerated
     */
    int insertSelective(Venues record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table venues
     *
     * @mbggenerated
     */
    List<Venues> selectByExample(VenuesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table venues
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "venues_id, venues_name, venuesType_id, address, comments, start, location",
        "from venues",
        "where venues_id = #{venuesId,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    Venues selectByPrimaryKey(Integer venuesId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table venues
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") Venues record, @Param("example") VenuesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table venues
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") Venues record, @Param("example") VenuesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table venues
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Venues record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table venues
     *
     * @mbggenerated
     */
    @Update({
        "update venues",
        "set venues_name = #{venuesName,jdbcType=VARCHAR},",
          "venuesType_id = #{venuestypeId,jdbcType=INTEGER},",
          "address = #{address,jdbcType=INTEGER},",
          "comments = #{comments,jdbcType=VARCHAR},",
          "start = #{start,jdbcType=VARCHAR},",
          "location = #{location,jdbcType=INTEGER}",
        "where venues_id = #{venuesId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Venues record);
}