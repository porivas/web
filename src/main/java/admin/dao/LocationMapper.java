package admin.dao;

import admin.model.Location;
import admin.model.LocationExample;
import java.util.List;

import common.core.generic.GenericDao;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

public interface LocationMapper extends GenericDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbggenerated
     */
    int countByExample(LocationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbggenerated
     */
    int deleteByExample(LocationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbggenerated
     */
    @Delete({
        "delete from location",
        "where location_id = #{locationId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer locationId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbggenerated
     */
    @Insert({
        "insert into location (location_id, lon, ",
        "lat, comments, status)",
        "values (#{locationId,jdbcType=INTEGER}, #{lon,jdbcType=DOUBLE}, ",
        "#{lat,jdbcType=DOUBLE}, #{comments,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="locationId", before=true, resultType=Integer.class)
    int insert(Location record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbggenerated
     */
    int insertSelective(Location record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbggenerated
     */
    List<Location> selectByExample(LocationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "location_id, lon, lat, comments, status",
        "from location",
        "where location_id = #{locationId,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    Location selectByPrimaryKey(Integer locationId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") Location record, @Param("example") LocationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") Location record, @Param("example") LocationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Location record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table location
     *
     * @mbggenerated
     */
    @Update({
        "update location",
        "set lon = #{lon,jdbcType=DOUBLE},",
          "lat = #{lat,jdbcType=DOUBLE},",
          "comments = #{comments,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=VARCHAR}",
        "where location_id = #{locationId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Location record);
}