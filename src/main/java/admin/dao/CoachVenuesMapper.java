package admin.dao;

import admin.model.CoachVenues;
import admin.model.CoachVenuesExample;
import java.util.List;

import common.core.generic.GenericDao;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

public interface CoachVenuesMapper extends GenericDao{
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_venues
     *
     * @mbggenerated
     */
    int countByExample(CoachVenuesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_venues
     *
     * @mbggenerated
     */
    int deleteByExample(CoachVenuesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_venues
     *
     * @mbggenerated
     */
    @Delete({
        "delete from coach_venues",
        "where coach_venues_id = #{coachVenuesId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String coachVenuesId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_venues
     *
     * @mbggenerated
     */
    @Insert({
        "insert into coach_venues (coach_venues_id, coach_id, ",
        "venues_id)",
        "values (#{coachVenuesId,jdbcType=VARCHAR}, #{coachId,jdbcType=INTEGER}, ",
        "#{venuesId,jdbcType=INTEGER})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="coachVenuesId", before=true, resultType=String.class)
    int insert(CoachVenues record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_venues
     *
     * @mbggenerated
     */
    int insertSelective(CoachVenues record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_venues
     *
     * @mbggenerated
     */
    List<CoachVenues> selectByExample(CoachVenuesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_venues
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "coach_venues_id, coach_id, venues_id",
        "from coach_venues",
        "where coach_venues_id = #{coachVenuesId,jdbcType=VARCHAR}"
    })
    @ResultMap("BaseResultMap")
    CoachVenues selectByPrimaryKey(String coachVenuesId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_venues
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") CoachVenues record, @Param("example") CoachVenuesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_venues
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") CoachVenues record, @Param("example") CoachVenuesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_venues
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(CoachVenues record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coach_venues
     *
     * @mbggenerated
     */
    @Update({
        "update coach_venues",
        "set coach_id = #{coachId,jdbcType=INTEGER},",
          "venues_id = #{venuesId,jdbcType=INTEGER}",
        "where coach_venues_id = #{coachVenuesId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(CoachVenues record);
}