package admin.dao;

import admin.model.Course;
import admin.model.CourseExample;
import java.util.List;

import common.core.generic.GenericDao;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

public interface CourseMapper extends GenericDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbggenerated
     */
    int countByExample(CourseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbggenerated
     */
    int deleteByExample(CourseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbggenerated
     */
    @Delete({
        "delete from course",
        "where course_id = #{courseId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer courseId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbggenerated
     */
    @Insert({
        "insert into course (course_id, course_name, ",
        "comments, sport_id, ",
        "venues_id, coach_id, ",
        "level, target, start_date, ",
        "end_date, status, start)",
        "values (#{courseId,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, ",
        "#{comments,jdbcType=VARCHAR}, #{sportId,jdbcType=INTEGER}, ",
        "#{venuesId,jdbcType=INTEGER}, #{coachId,jdbcType=INTEGER}, ",
        "#{level,jdbcType=VARCHAR}, #{target,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE}, ",
        "#{endDate,jdbcType=DATE}, #{status,jdbcType=VARCHAR}, #{start,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="courseId", before=true, resultType=Integer.class)
    int insert(Course record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbggenerated
     */
    int insertSelective(Course record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbggenerated
     */
    List<Course> selectByExample(CourseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "course_id, course_name, comments, sport_id, venues_id, coach_id, level, target, ",
        "start_date, end_date, status, start",
        "from course",
        "where course_id = #{courseId,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    Course selectByPrimaryKey(Integer courseId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") Course record, @Param("example") CourseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") Course record, @Param("example") CourseExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Course record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbggenerated
     */
    @Update({
        "update course",
        "set course_name = #{courseName,jdbcType=VARCHAR},",
          "comments = #{comments,jdbcType=VARCHAR},",
          "sport_id = #{sportId,jdbcType=INTEGER},",
          "venues_id = #{venuesId,jdbcType=INTEGER},",
          "coach_id = #{coachId,jdbcType=INTEGER},",
          "level = #{level,jdbcType=VARCHAR},",
          "target = #{target,jdbcType=VARCHAR},",
          "start_date = #{startDate,jdbcType=DATE},",
          "end_date = #{endDate,jdbcType=DATE},",
          "status = #{status,jdbcType=VARCHAR},",
          "start = #{start,jdbcType=VARCHAR}",
        "where course_id = #{courseId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Course record);
}